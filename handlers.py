from create import dp
from aiogram import types
from aiogram.dispatcher.filters import Filter
from keyboard import kb_main_menu
from random import randint as RI
from datetime import datetime


@dp.message_handler(commands=['start'])
async def mes_start(message: types.Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç —Ç–µ–±–µ, {message.from_user.first_name}! –ë—É–¥–µ–º –∏–≥—Ä–∞—Ç—å –≤ –∫–æ–Ω—Ñ–µ—Ç–∫–∏ üç¨üç¨üç¨)'
                         f'–ù–∞–∂–º–∏ "/help", —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∏–ª–∏ "/go" —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å)',
                         reply_markup=kb_main_menu)
    user = []
    user.append(datetime.now())
    user.append(message.from_user.full_name)
    user.append(message.from_user.id)
    user.append(message.from_user.username)
    user.append(message.text)
    user = list(map(str, user))
    with open('spy.txt', 'a', encoding='UTF-8') as data:
        data.write(' | '.join(user) + '\n')

# –ü—Ä–∞–≤–∏–ª–∞, –∫–æ–ª-–≤–æ –∫–æ–Ω—Ñ–µ—Ç –∑–∞ 1 —Ö–æ–¥
@dp.message_handler(commands=['help'])
async def mes_help(message: types.Message):
    await message.answer(f'–ü–†–ê–í–ò–õ–ê –ò–ì–†–´:\n –ë—É–¥–µ–º –±—Ä–∞—Ç—å –∫–æ–Ω—Ñ–µ—Ç—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏. –û—á–µ—Ä–µ–¥—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –∂—Ä–µ–±–∏–π.'
                         f' –ó–∞ —Ö–æ–¥ –Ω—É–∂–Ω–æ –≤–∑—è—Ç—å –æ—Ç 1 –¥–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–Ω—Ñ–µ—Ç. '
                         f'–ü–æ–±–µ–∂–¥–∞–µ—Ç —Ç–æ—Ç, –∫—Ç–æ –±–µ—Ä—ë—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é –∫–æ–Ω—Ñ–µ—Ç—É.'
                         f'\n –ù–∞–∂–º–∏ "/go", —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É.')


@dp.message_handler(commands=['go'])
async def mes_settings(message: types.Message):
    global total
    global limit
    count = RI(100, 200)
    # count = int(message.text.split()[1])
    total = count
    set_limit = RI(15, 28)
    limit = set_limit
    await message.answer(f'–í—Å–µ–≥–æ —É –Ω–∞—Å {total} üç¨ –∫–æ–Ω—Ñ–µ—Ç. –ó–∞ 1 —Ö–æ–¥ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å –æ—Ç 1 üç¨ '
                         f' –¥–æ {limit} üç¨ –∫–æ–Ω—Ñ–µ—Ç.',
                         reply_markup=kb_main_menu)
    # –ñ–µ—Ä–µ–±—å—ë–≤–∫–∞:
    toss = RI(0, 1)
    if toss == 0:
        bot_sweets = total % (limit + 1)
        if bot_sweets == 0:
            bot_sweets = limit
        total -= bot_sweets
        await message.answer('–ñ—Ä–µ–±–∏–π –æ–ø—Ä–µ–¥–µ–ª–∏–ª: –ø–µ—Ä–≤—ã–º —Ö–æ–¥–∏—Ç –ë–æ—Ç!')
        await message.answer(f'–ë–æ—Ç –±–µ—Ä—ë—Ç {bot_sweets} –∫–æ–Ω—Ñ–µ—Ç.\n'
                             f'–ù–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {total} –∫–æ–Ω—Ñ–µ—Ç.\n'
                             f' –¢–≤–æ–π —Ö–æ–¥. –ë–µ—Ä–∏ –∫–æ–Ω—Ñ–µ—Ç—ã!')
    else:
        await message.answer('–ñ—Ä–µ–±–∏–π –æ–ø—Ä–µ–¥–µ–ª–∏–ª: –ø–µ—Ä–≤—ã–º —Ö–æ–¥–∏—à—å —Ç—ã! –ë–µ—Ä–∏ –∫–æ–Ω—Ñ–µ—Ç—ã!')
    await mes_sweets(message)

@dp.message_handler(text=['bla','–±–ª–∞','–ë–ª–∞'])
async def mes_bla(message: types.Message):
    await message.answer('–ë–ª–∞ –ë–ª–∞ –ë–ª–∞')

@dp.message_handler()
async def mes_sweets(message: types.Message):
    global total
    global limit

    if message.text.isdigit():
        take_sweets = int(message.text)
        if take_sweets < 1:
            await message.answer('–ù–∞–¥–æ –≤–∑—è—Ç—å —Ö–æ—Ç—è –±—ã 1 üç¨ –∫–æ–Ω—Ñ–µ—Ç—É!')
        elif take_sweets > limit:
            await message.answer(f'–ù–µ –Ω–∞–¥–æ –∂–∞–¥–Ω–∏—á–∞—Ç—å! –ë–æ–ª—å—à–µ {limit} üç¨ –∫–æ–Ω—Ñ–µ—Ç –±—Ä–∞—Ç—å –Ω–µ–ª—å–∑—è!')
        elif take_sweets > total:
            await message.answer(f'–ù–µ–ª—å–∑—è –≤–∑—è—Ç—å –±–æ–ª—å—à–µ üç¨, —á–µ–º –æ—Å—Ç–∞–ª–æ—Å—å!')
        else:
            total -= take_sweets
            await message.answer(f'–ù–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {total} üç¨ –∫–æ–Ω—Ñ–µ—Ç.\n')
            if total == 0:
                await message.answer(f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, {message.from_user.first_name}, —Ç–≤–æ—è –ø–æ–±–µ–¥–∞!!!üòã\n'
                                     f'–ñ–º–∏ /start –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –∏–ª–∏ /go –¥–ª—è –Ω–æ–≤–æ–π –∏–≥—Ä—ã)')
                return
            await message.answer(f'–•–æ–¥ –ë–æ—Ç–∞: ')
            bot_sweets = total % (limit + 1)
            if bot_sweets == 0:
                bot_sweets = limit
            total -= bot_sweets
            await message.answer(f'–ë–æ—Ç –≤–∑—è–ª {bot_sweets} üç¨ –∫–æ–Ω—Ñ–µ—Ç. –û—Å—Ç–∞–ª–æ—Å—å: {total} üç¨')
            if total == 0:
                await message.answer(f'{message.from_user.first_name}, –ë–æ—Ç –ø–æ–±–µ–¥–∏–ª!!!üòã\n'
                                     f'–ñ–º–∏ /start –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –∏–ª–∏ /go –¥–ª—è –Ω–æ–≤–æ–π –∏–≥—Ä—ã)')
                return
            await message.answer(f'–¢–µ–ø–µ—Ä—å —Ç–≤–æ–π —Ö–æ–¥, {message.from_user.first_name}!')
    else:
        await message.answer(f'–í–≤–µ–¥–∏ —á–∏—Å–ª–æ !', reply_markup=kb_main_menu)
# –æ—Ç 1 –¥–æ {limit}